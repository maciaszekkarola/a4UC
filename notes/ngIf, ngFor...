Directives: 
-wbudowane i custom made

wbudowane:
*ngIf = "expression"

expression to props który przyjmuje wartość false/true

<p *ngIf="serverCreated; else noServer"> Server was created, server name is {{ serverName }}</p>
    <ng-template #noServer> 
        <p>No server was created</p>
    </ng-template>
opcja z else jest jak powyżej
w formie ng-template wstrzykuje tresc ktora jest pokazana jesli serverCreated === false;


//////////////////
zmienia dynamicznie zmieniać css
ngStyle

thml:
<p [ngStyle] = "{backgroundColor : getColor()}">

ts:
getColor() {
        return this.serverStatus === 'online' ? 'green' : 'red';
    }

//////////////////
zmienia dynamicfznie classy w css
ngClass

<p
[ngClass] = "{online: serverStatus === 'online'}" >

ngClass też przyjmuje obiekt, kluczem jest klasa w css a wartością jest np. true/false itp.
tutaj jest uzależniony od propsa, czy jego wartośc to 'online' czy 'offline'


NGFOR
ts:
props
servers: string[]= ['TestServer1', 'TestServer2'];


po kliknięciu w button funkcja wrzuca serverName do tablicy servers

onCreateServer() {
    this.serverCreated = true;
    this.servers.push(this.serverName);
    this.serverCreationStatus = `server was created! Name is ${this.serverName}`;
  }


<app-server *ngFor="let server of servers"></app-server>
